from scapy.all import Padding, copy

#from scapy.packet import Padding
from scapy.layers.l2 import Dot1Q, Ether
from scapy.layers.inet import IP, UDP
from scapy.layers.inet6 import IPv6
from scapy.layers.dhcp import BOOTP, DHCP
from scapy.layers.dhcp6 import DHCP6_Solicit
from scapy.layers.eap import EAPOL, EAP, EAP_MD5
from scapy.contrib.ospf import OSPF_DBDesc, OSPF_Hdr
from scapy.contrib.ospf import OSPF_LSA_Hdr
from scapy.contrib.igmp import IGMP
from scapy.contrib.igmpv3 import IGMPv3, IGMPv3gr, IGMPv3mr

def build0():

    hdr_list = []
    for i in range(50):
        hdr = OSPF_LSA_Hdr()
        hdr.type = 5
        for _ in range(100):
            hdr.id = "1.1.1.1"
            hdr.adrouter = "4.4.4.4"
            hdr_list.append(copy.copy(hdr))
        print("hdr_list length = {}".format(len(hdr_list)))
    mtu = 1500
    size = len(OSPF_DBDesc(lsaheaders=[OSPF_LSA_Hdr()]))
    chunk_size = mtu/size
    print(size, chunk_size)
    chunked_list = [hdr_list[i:i+chunk_size] for i in range(0, len(hdr_list), chunk_size)]
    chunk_last = len(chunked_list) - 1
    for index, hdr_list in enumerate(chunked_list):
        desc = OSPF_DBDesc(lsaheaders=hdr_list)
        if index == chunk_last:
            desc.dbdescr = desc.dbdescr | "M"
        print(len(desc))
        resp = Ether()/IP()/OSPF_Hdr()/desc
        pkt = Ether(bytes(resp))
        if index == chunk_last:
            pkt.show2()
#build0()

def build1():
    pkt = Ether()/IP(src="1.2.3.4")/IGMP(type=0x12, gaddr="224.2.3.4")
    pkt[IGMP].igmpize()
    pkt.show2()
    #pkt = Ether()/IP(src="1.2.3.4")/IGMPv3(type=0x12, srcaddrs=["224.2.3.4"])
    pkt = Ether()/IP(src="1.2.3.4")/IGMPv3(type=0x22)
    pkt = (Ether()/IP(src="1.2.3.4")/IGMPv3(type="Version 3 Membership Report")/
           IGMPv3mr(numgrp=1)/
           IGMPv3gr(rtype="Allow New Sources", maddr="239.1.1.1", srcaddrs=["10.1.1.1", "10.1.1.2"]))
    pkt = (Ether()/IP(src="1.2.3.4")/IGMPv3(type="Version 3 Membership Report")/
           IGMPv3mr(numgrp=1)/IGMPv3gr(rtype=1, maddr="239.1.1.1"))
    #pkt = (Ether()/IP(src="1.2.3.4")/IGMPv3(type="Version 3 Membership Report"))
    pkt[IGMPv3].igmpize()
    pkt.show2()
    import pdb;pdb.set_trace()
#build1()

def build2():
    #pkt = Ether()/IP(src="1.2.3.4")/IGMP(type=0x11)
    #pkt[IGMP].igmpize()
    #pkt.show2()
    pkt = Ether()/IP(src="1.2.3.4")/IGMPv3(type=0x11)
    pkt[IGMPv3].igmpize()
    pkt.show2()
    import pdb;pdb.set_trace()
#build2()

def build3():
    pkt = Ether()/EAPOL()/EAP_MD5()
    pkt.show2()
    import pdb;pdb.set_trace()
#build3()

def build4():
    req = Ether()/Dot1Q()/IP()/UDP()/BOOTP()/DHCP()
    req.src = '00:11:01:00:00:01'
    req.dst = 'ff:ff:ff:ff:ff:ff'
    req[BOOTP].op="BOOTREQUEST"
    req[Dot1Q].vlan=10
    req[Dot1Q].type=2048
    req[IP].id=0
    req[IP].src='0.0.0.0'
    req[IP].dst='255.255.255.255'
    req[IP].flags="DF"
    res, ch = req.src.split(":"), ""
    for i in res: ch=ch + chr(int(i,16))
    req[BOOTP].chaddr=ch
    req[BOOTP].xid=1212933010
    options=[]
    options.append(("message-type", "discover"))
    param_req_list=[1, 3, 58, 59]
    options.append(("param_req_list", param_req_list))
    options.append(("end", Padding()))
    req[DHCP].options=options
    req.show2()
    print(req.command())
#build4()

def build5():
    pkt = Ether()/IPv6(dst="ff02::1:2")/UDP()/DHCP6_Solicit()
    pkt.show2()
    import pdb;pdb.set_trace()
build5()

raw = \
"\xff\xff\xff\xff\xff\xff\x00\x11\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x45\x00\x01\x17\x00\x00\x40\x00\x40\x11\x39\xd7\x00\x00" \
"\x00\x00\xff\xff\xff\xff\x00\x44\x00\x43\x01\x03\x99\x18\x01\x01" \
"\x06\x00\x48\x4b\xe3\x92\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x01\x00\x00\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01" \
"\x01\x37\x04\x01\x03\x3a\x3b\xff\x00"

raw = \
"\xff\xff\xff\xff\xff\xff\x00\x11\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x45\x00\x01\x25\x00\x00\x40\x00\x40\x11\x39\xc9\x00\x00" \
"\x00\x00\xff\xff\xff\xff\x00\x44\x00\x43\x01\x11\x86\xcc\x01\x01" \
"\x06\x00\x48\x4b\xe3\x92\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x01\x00\x00\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01" \
"\x03\x37\x04\x01\x03\x3a\x3b\x36\x04\x64\x01\x00\x02\x32\x04\x64" \
"\x01\x00\x03\xff\x00\x00\x00"

raw = \
"\x00\x11\x01\x00\x00\x01\x00\x12\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x45\x00\x01\x2e\x00\x00\x40\x00\x40\x11\x71\xb8\x64\x01" \
"\x00\x02\x64\x01\x00\x03\x00\x43\x00\x44\x01\x1a\x00\x00\x02\x01" \
"\x06\x00\x48\x4b\xe3\x92\x00\x00\x00\x00\x00\x00\x00\x00\x64\x01" \
"\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x01\x00\x00\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01" \
"\x02\x36\x04\x64\x01\x00\x02\x33\x04\x00\x01\x51\x80\x01\x04\xff" \
"\xff\xff\x00\x3a\x04\x00\x00\xa8\xc0\x3b\x04\x00\x01\x27\x50\xff"

raw = \
"\x00\x11\x01\x00\x00\x01\x00\x12\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x45\x00\x01\x2e\x00\x00\x40\x00\x40\x11\x71\xb8\x64\x01" \
"\x00\x02\x64\x01\x00\x03\x00\x43\x00\x44\x01\x1a\x00\x00\x02\x01" \
"\x06\x00\x48\x4b\xe3\x92\x00\x00\x00\x00\x00\x00\x00\x00\x64\x01" \
"\x00\x03\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x01\x00\x00\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01" \
"\x05\x36\x04\x64\x01\x00\x02\x33\x04\x00\x01\x51\x80\x01\x04\xff" \
"\xff\xff\x00\x3a\x04\x00\x00\xa8\xc0\x3b\x04\x00\x01\x27\x50\xff"

raw = \
"\x00\x12\x01\x00\x00\x01\x00\x11\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x45\x00\x01\x17\xb5\x1c\x40\x00\x40\x11\x00\x00\x64\x01" \
"\x00\x03\x64\x01\x00\x02\x00\x44\x00\x43\x01\x03\x01\x03\x01\x01" \
"\x06\x00\x02\x76\xe9\x89\x00\x00\x00\x00\x64\x01\x00\x03\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x11\x01\x00\x00\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01" \
"\x03\x37\x04\x01\x03\x3a\x3b\xff\x00"

raw = \
"\x00\x12\x01\x00\x00\x01\xb8\x6a\x97\xfd\x66\x5a\x08\x00\x45\x00" \
"\x01\x48\x9a\xb9\x40\x00\x40\x11\x74\xe7\x14\x01\x01\x01\x14\x01" \
"\x01\x02\x00\x43\x00\x43\x01\x34\x79\x08\x01\x01\x06\x01\x5f\xd5" \
"\x73\xfe\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\xc0\xa8\x00\x01\x00\x11\x01\x00\x00\x01\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x63\x82\x53\x63\x35\x01\x01\x37\x04\x01" \
"\x03\x3a\x3b\x52\x1e\x01\x09\x45\x74\x68\x65\x72\x6e\x65\x74\x33" \
"\x02\x11\x62\x38\x3a\x36\x61\x3a\x39\x37\x3a\x66\x64\x3a\x36\x36" \
"\x3a\x35\x61\xff\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00"

raw = \
"\x01\x00\x5e\x00\x00\x02\x00\x12\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x08\x00\x46\xc0\x00\x20\x00\x06\x40\x00\x01\x02\x9f\x0c\x65\x01" \
"\x00\x02\xe0\x00\x00\x02\x94\x04\x00\x00\x17\x00\x07\xfe\xe1\x00" \
"\x00\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x01\x00\x5e\x00\x00\x01\x00\x26\x44\x6c\x1e\xda\x08\x00\x46\xc0" \
"\x00\x24\x17\xc9\x40\x00\x01\x02\x29\xa3\xc0\xa8\x01\xfe\xe0\x00" \
"\x00\x01\x94\x04\x00\x00\x11\x18\xec\xd3\x00\x00\x00\x00\x02\x14" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x01\x80\xc2\x00\x00\x03\x00\x11\x01\x00\x00\x01\x88\x8e\x02\x01" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x00\x11\x01\x00\x00\x01\xb8\x6a\x97\xfd\x66\x5a\x88\x8e\x02\x00" \
"\x00\x05\x01\xfd\x00\x05\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x01\x80\xc2\x00\x00\x03\x00\x11\x01\x00\x00\x01\x88\x8e\x02\x00" \
"\x00\x0c\x02\xfd\x00\x0c\x01\x55\x73\x65\x72\x70\x31\x31\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x00\x11\x01\x00\x00\x01\xb8\x6a\x97\xfd\x66\x5a\x88\x8e\x02\x00" \
"\x00\x16\x01\xfe\x00\x16\x04\x10\x53\x16\x2c\xd0\x16\x3b\xd3\x26" \
"\x81\x38\xf3\x99\x76\x5b\x8c\x47\x00\x00\x00\x00\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x01\x80\xc2\x00\x00\x03\x00\x11\x01\x00\x00\x01\x88\x8e\x02\x00" \
"\x00\x1d\x02\xfe\x00\x1d\x04\x10\xfb\x31\xcd\x64\xe5\xaf\x8e\x42" \
"\xb9\xfa\x87\xe1\x01\xd0\x85\x59\x55\x73\x65\x72\x70\x31\x31\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00"

raw = \
"\x33\x33\x00\x01\x00\x02\x00\x11\x01\x00\x00\x01\x81\x00\x00\x0a" \
"\x86\xdd\x60\x00\x00\x00\x00\x34\x11\x01\xfe\x80\x00\x00\x00\x00" \
"\x00\x00\x02\x11\x01\xff\xfe\x00\x00\x01\xff\x02\x00\x00\x00\x00" \
"\x00\x00\x00\x00\x00\x00\x00\x01\x00\x02\x02\x22\x02\x23\x00\x34" \
"\x00\x34\x01\x5c\x38\x8f\x00\x08\x00\x02\x00\x00\x00\x01\x00\x0e" \
"\x00\x01\x00\x01\x28\xf4\x28\x58\x00\x11\x01\x00\x00\x01\x00\x03" \
"\x00\x0c\x00\x00\x00\x0a\x00\x04\x9d\x40\x00\x07\x62\x00"

pkt = Ether(raw)
pkt.hide_defaults()
if EAP in pkt:
    pkt[EAP].show2()
    print(pkt[EAP].value)
    print(pkt[EAP].optional_name)
pkt.show2()
if DHCP in pkt:
    options = {}
    print(pkt[DHCP].options)
    for option in pkt[DHCP].options:
        import pdb;pdb.set_trace()
        options[option[0]] = option[1]
    print(options)
    import pdb;pdb.set_trace()

print(pkt.command())
